# docker-compose.yml

services:
  # Бэкенд сервис на FastAPI
  api:
    build: ./server
    env_file: ./.env
    container_name: eduanalytics_api
    command: >
      sh -c "python scripts/prestart.py && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./server:/app
    ports:
      - "8000:8000"
    environment:
      - DB_URL=${DB_URL:-postgresql+asyncpg://edua:secret@db:5432/eduanalytics}
      - DB_URL_SYNC=${DB_URL_SYNC:-postgresql+psycopg2://edua:secret@db:5432/eduanalytics}
      - DATABASE_URL=${DATABASE_URL:-postgresql+asyncpg://edua:secret@db:5432/eduanalytics}
      - PGCLIENTENCODING=UTF8
      - SENTRY_DSN=${SENTRY_DSN}
      - SENTRY_ENVIRONMENT=${SENTRY_ENVIRONMENT:-development}
      - SENTRY_TRACES_SAMPLE_RATE=${SENTRY_TRACES_SAMPLE_RATE:-1.0}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-1.5-flash}
      - AI_PROVIDER=${AI_PROVIDER:-ollama}
      - AI_MODEL=${AI_MODEL:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OLLAMA_API_BASE=${OLLAMA_API_BASE:-http://ollama:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-tinyllama}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started

  # Фронтенд сервис на Vite
  ui:
    build: .
    container_name: eduanalytics_ui
    env_file: ./.env
    working_dir: /app
    command: "npm start -- --port 5173 --host 0.0.0.0"
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - api

  # Canvas LMS (официальный образ)
  canvas:
    image: instructure/canvas-lms:stable
    container_name: eduanalytics_canvas
    env_file: ./.env
    environment:
      - CANVAS_LMS_POSTGRES_USER=user
      - CANVAS_LMS_POSTGRES_PASSWORD=password
      - CANVAS_LMS_POSTGRES_DB=canvas
      - CANVAS_LMS_REDIS_URL=redis://cache:6379/0
      - CANVAS_LMS_ELASTICSEARCH_URL=http://elasticsearch:9200
      - CANVAS_LMS_DOMAIN=localhost
      - CANVAS_LMS_SECRET_KEY=${CANVAS_SECRET_KEY}
    ports:
      - "8080:80"
    depends_on:
      - db
      - cache
      - elasticsearch
    volumes:
      - canvas_data:/var/canvas

  # Сервис базы данных PostgreSQL
  db:
    image: postgres:13-alpine
    container_name: eduanalytics_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-edua}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
      - POSTGRES_DB=${POSTGRES_DB:-eduanalytics}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-edua} -d ${POSTGRES_DB:-eduanalytics}"]
    

  # Сервис кэширования Redis
  cache:
    image: redis:6-alpine
    container_name: eduanalytics_cache
    ports:
      - "6379:6379"

  # Elasticsearch для Canvas LMS
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: eduanalytics_elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  # Планировщик напоминаний
  reminder_scheduler:
    build: ./server
    container_name: eduanalytics_reminder_scheduler
    command: python reminder_scheduler.py
    environment:
      - DB_URL=${DB_URL:-postgresql+asyncpg://edua:secret@db:5432/eduanalytics}
      - REDIS_URL=${REDIS_URL:-redis://cache:6379}
    depends_on:
      - db
      - cache
      - api
    volumes:
      - ./server:/app
    restart: unless-stopped

  # Локальный сервер моделей Ollama (бесплатно, оффлайн)
  ollama:
    image: ollama/ollama:latest
    container_name: eduanalytics_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    restart: unless-stopped

volumes:
  postgres_data:
  canvas_data:
  elasticsearch_data:
  n8n_data:
  ollama:
