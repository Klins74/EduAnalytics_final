"""add_feedback_table

Revision ID: 75285fe7e166
Revises: 52815d2a696e
Create Date: 2025-08-06 15:32:23.327416

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '75285fe7e166'
down_revision: Union[str, Sequence[str], None] = '52815d2a696e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feedbacks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('submission_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedbacks_id'), 'feedbacks', ['id'], unique=False)
    op.create_index(op.f('ix_feedbacks_submission_id'), 'feedbacks', ['submission_id'], unique=False)
    op.create_index(op.f('ix_feedbacks_user_id'), 'feedbacks', ['user_id'], unique=False)
    
    # Use batch mode for SQLite compatibility
    with op.batch_alter_table('grades', schema=None) as batch_op:
        batch_op.drop_constraint('fk_grades_student_id_students', type_='foreignkey')
        batch_op.create_foreign_key('fk_grades_submission_id_submissions', 'submissions', ['submission_id'], ['id'])
        batch_op.create_foreign_key('fk_grades_graded_by_users', 'users', ['graded_by'], ['id'])
        batch_op.drop_column('subject')
        batch_op.drop_column('student_id')
        batch_op.drop_column('value')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Use batch mode for SQLite compatibility
    with op.batch_alter_table('grades', schema=None) as batch_op:
        batch_op.add_column(sa.Column('value', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('student_id', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('subject', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint('fk_grades_submission_id_submissions', type_='foreignkey')
        batch_op.drop_constraint('fk_grades_graded_by_users', type_='foreignkey')
        batch_op.create_foreign_key('fk_grades_student_id_students', 'students', ['student_id'], ['id'])
    
    op.drop_index(op.f('ix_feedbacks_user_id'), table_name='feedbacks')
    op.drop_index(op.f('ix_feedbacks_submission_id'), table_name='feedbacks')
    op.drop_index(op.f('ix_feedbacks_id'), table_name='feedbacks')
    op.drop_table('feedbacks')
    # ### end Alembic commands ###
