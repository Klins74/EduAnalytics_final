import requests
import json
from datetime import datetime, timedelta

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
auth_response = requests.post('http://localhost:8000/auth/token', data={
    'username': 'admin@example.com', 
    'password': 'admin'
})

if auth_response.status_code == 200:
    token = auth_response.json()['access_token']
    headers = {
        'Authorization': f'Bearer {token}',
        'Content-Type': 'application/json'
    }
    
    print("üîî –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π\n")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...")
    settings_response = requests.get('http://localhost:8000/api/reminders/settings', headers=headers)
    if settings_response.status_code == 200:
        settings = settings_response.json()
        print(f"‚úì –ù–∞–π–¥–µ–Ω–æ {len(settings)} –Ω–∞—Å—Ç—Ä–æ–µ–∫")
        for setting in settings:
            print(f"  - {setting['reminder_type']}: {'–≤–∫–ª—é—á–µ–Ω–æ' if setting['is_enabled'] else '–≤—ã–∫–ª—é—á–µ–Ω–æ'}")
    else:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {settings_response.status_code}")
    
    print()
    
    # 2. –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∑–∞–Ω—è—Ç–∏–π
    print("2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∑–∞–Ω—è—Ç–∏—è—Ö...")
    update_data = {
        'is_enabled': True,
        'interval_before': '1h',
        'notification_channel': 'email'
    }
    
    update_response = requests.put(
        'http://localhost:8000/api/reminders/settings/schedule_upcoming',
        headers=headers,
        json=update_data
    )
    
    if update_response.status_code == 200:
        print("‚úì –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        updated_setting = update_response.json()
        print(f"  –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –∑–∞: {updated_setting['interval_before']}")
        print(f"  –ö–∞–Ω–∞–ª: {updated_setting['notification_channel']}")
    else:
        print(f"‚úó –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {update_response.status_code}")
    
    print()
    
    # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    print("3. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è...")
    test_data = {
        'reminder_type': 'schedule_upcoming',
        'notification_channel': 'email',
        'test_message': '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã EduAnalytics!'
    }
    
    test_response = requests.post(
        'http://localhost:8000/api/reminders/test',
        headers=headers,
        json=test_data
    )
    
    if test_response.status_code == 200:
        print("‚úì –¢–µ—Å—Ç–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        print(f"  –û—Ç–≤–µ—Ç: {test_response.json()['message']}")
    else:
        print(f"‚úó –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {test_response.status_code}")
        print(f"  {test_response.text}")
    
    print()
    
    # 4. –°–æ–∑–¥–∞–µ–º –∑–∞–Ω—è—Ç–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    print("4. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...")
    tomorrow = datetime.now() + timedelta(days=1)
    schedule_data = {
        'course_id': 1,
        'schedule_date': tomorrow.strftime('%Y-%m-%d'),
        'start_time': '14:00:00',
        'end_time': '15:30:00',
        'location': '–ê—É–¥–∏—Ç–æ—Ä–∏—è 201',
        'instructor_id': 1,
        'lesson_type': 'lecture',
        'description': '–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π',
        'is_cancelled': False
    }
    
    schedule_response = requests.post(
        'http://localhost:8000/api/schedule/',
        headers=headers,
        json=schedule_data
    )
    
    if schedule_response.status_code == 201:
        schedule = schedule_response.json()
        print(f"‚úì –ó–∞–Ω—è—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å ID: {schedule['id']}")
        print(f"  –î–∞—Ç–∞: {schedule['schedule_date']}")
        print(f"  –í—Ä–µ–º—è: {schedule['start_time']}-{schedule['end_time']}")
        print("  (–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã)")
    else:
        print(f"‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è: {schedule_response.status_code}")
        print(f"  {schedule_response.text}")
    
    print()
    
    # 5. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    print("5. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...")
    upcoming_response = requests.get(
        'http://localhost:8000/api/reminders/upcoming?days_ahead=7',
        headers=headers
    )
    
    if upcoming_response.status_code == 200:
        upcoming = upcoming_response.json()
        print(f"‚úì –ù–∞–π–¥–µ–Ω–æ {len(upcoming)} –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π")
        for reminder in upcoming:
            print(f"  - {reminder['title']}")
            print(f"    –û—Ç–ø—Ä–∞–≤–∏—Ç—å: {reminder['send_at']}")
            print(f"    –ö–∞–Ω–∞–ª: {reminder['notification_channel']}")
    else:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: {upcoming_response.status_code}")
    
    print()
    
    # 6. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("6. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...")
    stats_response = requests.get('http://localhost:8000/api/reminders/stats', headers=headers)
    
    if stats_response.status_code == 200:
        stats = stats_response.json()
        print(f"‚úì –í—Å–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {stats['total_settings']}")
        print(f"‚úì –í–∫–ª—é—á–µ–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: {stats['enabled_settings']}")
        print(f"‚úì –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: {stats['upcoming_reminders']}")
        
        print("\n  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —Ç–∏–ø–∞–º:")
        for type_name, type_settings in stats['settings_by_type'].items():
            status = "–≤–∫–ª—é—á–µ–Ω–æ" if type_settings['enabled'] else "–≤—ã–∫–ª—é—á–µ–Ω–æ"
            print(f"    {type_name}: {status}")
            if type_settings['enabled']:
                print(f"      –ò–Ω—Ç–µ—Ä–≤–∞–ª: {type_settings['interval']}")
                print(f"      –ö–∞–Ω–∞–ª: {type_settings['channel']}")
    else:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {stats_response.status_code}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\n–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ:")
    print("http://localhost:4028/reminders")
    
else:
    print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
