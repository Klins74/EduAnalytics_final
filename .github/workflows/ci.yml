name: CI

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  backend:
    name: Backend FastAPI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    env:
      DB_URL: ${{ secrets.DB_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      CANVAS_TOKEN: ${{ secrets.CANVAS_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run linters
        run: flake8 .
      - name: Run tests
        run: pytest
      - name: Build Docker image
        run: docker build -t eduanalytics-backend .

  frontend:
    name: Frontend Next.js
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Install dependencies
        run: npm ci
      - name: Run linters
        run: npx eslint .
      - name: Run tests
        run: npm run test || true
      - name: Build Docker image
        run: docker build -t eduanalytics-frontend .

# Оптимизации:
# - Для Canvas LMS в CI использовать mock или отдельный тестовый инстанс (не запускать тяжелый контейнер в CI).
# - Для секретов использовать только GitHub Actions secrets.
# - Для production добавить отдельный workflow с деплоем.
